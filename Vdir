param(
    [Parameter(Mandatory = $true)]
    [string]$SiteName,

    [Parameter(Mandatory = $true)]
    [string]$SitePhysicalPath,

    [Parameter(Mandatory = $true)]
    [string]$BindingInformation,

    [Parameter(Mandatory = $false)]
    [string]$User,

    [Parameter(Mandatory = $false)]
    [string]$Password,

    [Parameter(Mandatory = $false)]
    [string]$VirtualDirName,

    [Parameter(Mandatory = $false)]
    [ValidateSet("Integrated", "Classic")]  # Ensures only valid values
    [string]$PipelineMode = "Integrated"    # Default to Integrated
)

# Path to appcmd.exe
$appcmd = "$env:SystemRoot\system32\inetsrv\appcmd.exe"

# Store all config settings in an object
$iisconfig = @{
    SiteName           = $SiteName
    SitePhysicalPath   = $SitePhysicalPath
    BindingInformation = $BindingInformation
    User              = $User
    Password          = $Password
    VirtualDirName    = $VirtualDirName
    PipelineMode      = $PipelineMode
}

# Create the IIS site
Write-Host "Creating IIS site '$($iisconfig.SiteName)' with physical path '$($iisconfig.SitePhysicalPath)' and binding '$($iisconfig.BindingInformation)'"
& $appcmd add site /name:"$($iisconfig.SiteName)" /physicalPath:"$($iisconfig.SitePhysicalPath)" /bindings:"$($iisconfig.BindingInformation)"

# Define the application pool name
$appPoolName = "$($iisconfig.SiteName)"

# Ensure the application pool exists
Write-Host "Ensuring application pool '$appPoolName' exists..."
& $appcmd add apppool /name:"$appPoolName" 2>$null  # Ignore errors if it already exists

# Set Managed Pipeline Mode (Integrated or Classic)
Write-Host "Setting application pool '$appPoolName' to use '$($iisconfig.PipelineMode)' mode."
& $appcmd set apppool /apppool.name:"$appPoolName" /managedPipelineMode:$($iisconfig.PipelineMode)

# Assign application pool to the site
Write-Host "Assigning application pool '$appPoolName' to site '$($iisconfig.SiteName)'"
& $appcmd set site /site.name:"$($iisconfig.SiteName)" /[path='/'].applicationPool:"$appPoolName"

# Configure Application Pool Identity
if (-not [string]::IsNullOrEmpty($iisconfig.User) -and -not [string]::IsNullOrEmpty($iisconfig.Password)) {
    Write-Host "Using specific user for app pool '$appPoolName'"
    & $appcmd set apppool /apppool.name:"$appPoolName" /processModel.identityType:"SpecificUser" /processModel.userName:"$($iisconfig.User)" /processModel.password:"$($iisconfig.Password)"
} else {
    Write-Host "No user credentials provided. Using ApplicationPoolIdentity."
    & $appcmd set apppool /apppool.name:"$appPoolName" /processModel.identityType:"ApplicationPoolIdentity"
}

# Add Virtual Directory (if VirtualDirName is provided)
if (-not [string]::IsNullOrEmpty($iisconfig.VirtualDirName)) {
    Write-Host "Adding virtual directory '$($iisconfig.VirtualDirName)' with physical path '$($iisconfig.SitePhysicalPath)'"
    & $appcmd add vdir /app.name:"$($iisconfig.SiteName)/" /path:"/$($iisconfig.VirtualDirName)" /physicalPath:"$($iisconfig.SitePhysicalPath)"
    
    # Assign application pool to virtual directory
    Write-Host "Assigning application pool '$appPoolName' to virtual directory '$($iisconfig.VirtualDirName)'"
    & $appcmd set app /app.name:"$($iisconfig.SiteName)/$($iisconfig.VirtualDirName)" /applicationPool:"$appPoolName"
} else {
    Write-Host "No virtual directory name provided. Skipping virtual directory creation."
}

# Restart IIS
Write-Host "Restarting IIS..."
iisreset

Write-Host "âœ… IIS site, application pool, and optional virtual directory configuration completed."
